services:
  # Servicio de la Base de Datos PostgreSQL
  database:
    image: postgres:14-alpine
    container_name: medical_chat_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: medical_chat_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - medical-chat-net
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d medical_chat_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Servicio del Backend (API)
  api-service:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: medical_chat_api
    restart: unless-stopped
    ports:
      - "3001:3000"
    networks:
      - medical-chat-net
    depends_on:
      database:
        condition: service_healthy
    environment:
      # Configuración del servidor
      NODE_ENV: production
      PORT: 3000
      
      # Configuración de la base de datos
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: medical_chat_db
      DB_SSL: "false"
      
      # Configuración de CORS
      CORS_ORIGIN: http://localhost:3000
      
      # Configuración de JWT
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      
      # Configuración de archivos
      MAX_FILE_SIZE: 10485760
      ALLOWED_FILE_TYPES: image/jpeg,image/png,image/webp
      
      # Configuración de logs
      LOG_LEVEL: info
    volumes:
      - api_uploads:/app/uploads
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

# Volúmenes persistentes
volumes:
  db_data:
    driver: local
    name: medical_chat_db_data
  api_uploads:
    driver: local
    name: medical_chat_uploads

# Red personalizada para la comunicación entre contenedores
networks:
  medical-chat-net:
    driver: bridge
    name: medical-chat-network
